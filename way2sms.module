<?php

/**
 * Login to way2SMS.
 *
 * @param string $username
 *   Username is sender's contact number.
 * @param string $password
 *   Password is sender's way2sms password.
 *
 * @return client
 *   Client object created at time of login.
 */
function _way2sms_login($username, $password){
  $lib_path = (function_exists('libraries_get_path')) ? libraries_get_path('way2sms') : 'libraries/way2sms';
  $platform = $lib_path . '/way2sms-api.php';
  dsm($platform);
  $client = NULL;
  $result = NULL;
  try {
    include $platform;
    if (!function_exists('sendWay2SMS') && !@include $platform) {
      \Drupal::logger('way2sms')->error('Error Loading Way2SMS Library');
    }
    else {
      $client = new WAY2SMSClient();
      $username = _way2sms_preprocess_contact_field($username);
      if ($username && $password) {
        $result = $client->login($username, $password);
      }
      else {
        return NULL;
      }
      if ($result != 1) {
        drupal_set_message(t("Invalid Credentials, make sure your number is registered at http://site24.way2sms.com/ and configured correct crendiatls at /admin/config/services/way2sms."), 'error');
        return NULL;
      }
    }
  }
  catch (Exception $e) {
    \Drupal::logger('way2sms')->error('Error Loading Way2SMS Library');
    return NULL;
  }
  return $client;
}

/**
 * Parse Contact Field.
 *
 * @param int $contact_number
 *   Prasing contact number to check
 *   if its valid Indian number.
 *
 * @return contact_number
 *   valid contact number.
 */
function _way2sms_preprocess_contact_field($contact_number) {
  $number = $contact_number;
  $contact_number = trim($contact_number);
  // Check if contact_number is greater than 10 digits.
  if (strlen($contact_number) == 10) {
    return $contact_number;
  }

  // Check for +91 at the beginning.
  $contact_number = preg_replace('/\A\+91/', '', $contact_number);

  // Check for non-digit characters.
  $contact_number = preg_replace('/\D/', '', $contact_number);

  // Check for 0 at the beginning.
  $contact_number = preg_replace('/\A0/', '', $contact_number);

  if (strlen($contact_number) == 10) {
    return $contact_number;
  }
  else {
    drupal_set_message(t("Invalid Contact Number: @num", ['@num' => $number]), 'error');
    return FALSE;
  }
}

/**
 * Send SMS.
 *
 * @param int $sender_phone_number
 *   Sender's phone number configured at
 *   admin/config/services/way2sms.
 * @param string $sender_password
 *   Sender's password configured at
 *   admin/config/services/way2sms.
 * @param int $reciever_contact_field
 *   Reciever's phone number to which SMS is sent.
 * @param string $message
 *   Message to be sent can be configured in rules.
 *
 * @return result
 *   sends message.
 */
function _way2sms_send($sender_phone_number, $sender_password, $reciever_contact_field, $message) {
  $result = NULL;
  $reciever_contact_field = _way2sms_preprocess_contact_field($reciever_contact_field);

  // Validate input.
  if ($sender_phone_number && $sender_password && $reciever_contact_field && $message) {
    // Login and instantiate WAY2SMSClient.
    $client = _way2sms_login($sender_phone_number, $sender_password);
    if ($client instanceof WAY2SMSClient) {
      // Send Message.
      try {
        $result = $client->send($reciever_contact_field, $message);
        $client->logout();
      }
      catch (Exception $e) {
        watchdog_exception('way2sms', $e);
        return NULL;
      }
    }
    else {
      \Drupal::logger('way2sms')->error('Error instantiating WAY2SMSClient');
    }
  }
  else {
    \Drupal::logger('way2sms')->error("Invalid input, Sender's phone number : @admin_number
    Sender's password : @admin_password, Reciever's phone number : @reciever_number
    For Message : @message", array('@admin_number' => $sender_phone_number,
      '@admin_password' => "", '@reciever_number' => $reciever_contact_field,
      '@message' => $message));
  }
  return $result;
}